/* ----------------------------------- */
/* body는 문서 전체를 감싸는 최상위 요소입니다. */
/* 화면 전체 배경색과 기본 레이아웃 축 설정 */
/* ----------------------------------- */
body {
    margin: 0; /* 브라우저 기본 바깥여백을 없애 화면 끝부터 시작하게 함 */
    display: flex; /* 내부 요소를 flex 컨테이너로 만들어 가로/세로 정렬 가능하게 함 */
    justify-content: center; /* 가로 방향으로 내부 요소(여기선 .container)를 수평 중앙에 배치 */
    align-items: flex-start; /* 세로 방향으로는 시작(위쪽)에 정렬 */
    padding-top: 50px; /* 페이지 상단과 내부 요소 사이에 50px 간격을 줌 */
    box-sizing: border-box; /* 테두리와 패딩을 포함해서 요소 크기를 계산, 레이아웃 제어가 편해짐 */
    background-color: #f0f2f5; /* 페이지 배경을 밝은 회색으로 설정해 눈에 부드럽게 만듦 */
}

/* --------------------------- */
/* 투두리스트 외곽 박스 스타일 */
/* --------------------------- */
.container {
    background-color: white; /* 내용 영역 배경은 하얀색 */
    width: 500px; /* 고정된 너비 500px */
    padding: 30px 40px; /* 안쪽 여백: 위아래 30px, 좌우 40px */
    border-radius: 10px; /* 모서리를 10px 둥글게 처리해 부드러운 이미지 연출 */
    text-align: center; /* 안의 텍스트는 모두 가운데 정렬 */
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08); /* 살짝 흐릿한 그림자를 줘 입체감 부여 */
}

/* ------------------- */
/* 제목(h1) 스타일 설정 */
/* ------------------- */
h1 {
    color: #4a90e2; /* 진하고 밝은 파란색으로 눈에 띄게 설정 */
    font-size: 2.2em; /* 글자 크기: 부모 요소(font)의 2.2배 (em 단위 참고 아래 설명) */
    margin-bottom: 30px; /* 제목 아래에 30px 여백을 줘 아래 요소와 구분 */
}

/* --------------------------------------------- */
/* em 및 rem 단위에 대한 추가 설명 (주석 내용) */
/* --------------------------------------------- */
/* 
em 단위는 현재 요소의 부모(font-size)를 기준으로 크기가 결정됩니다.
즉, 부모가 크면 자식도 비례해 커집니다.
따라서 요소가 중첩될수록 크기가 누적되어 커질 수 있습니다.
컴포넌트 내부 요소들의 비율을 조절할 때 주로 사용합니다.
*/
/* 
rem 단위는 html(루트 요소)을 기준으로 크기를 결정합니다.
부모와 무관하게 항상 루트 폰트 크기에 비례해서 계산되어,
중첩된 요소든 아니든 결과 크기가 일정하고 예측 가능하며,
웹사이트 전체의 기본 폰트 크기를 한번에 조정할 때 편합니다.
*/
/* 
em: 컴포넌트 내부 요소 간 상대적 크기 조절에 유용.
rem: 웹페이지 전역 폰트 크기나 주요 레이아웃 크기에 적합.
*/

/* ------------------------------ */
/* 입력 영역 (텍스트 입력 + 버튼) */
/* ------------------------------ */
.input-area {
    display: flex; /* 입력창과 버튼을 옆으로 나란히 배치 */
    gap: 10px; /* 두 요소 사이 간격을 10px로 확보 */
}

/* ----------------------------- */
/* 텍스트 입력창(인풋박스) 스타일 */
/* ----------------------------- */
#todoInput {
    flex-grow: 1; /* 남은 공간 모두 차지하게 하여 버튼과 크기 비례 */
    outline: none; /* 포커스 시 기본 파란 외곽선 제거 */
    border-radius: 5px; /* 모서리 5px 둥글게 */
    border: 1px solid #ddd; /* 연한 회색 테두리 */
    padding: 12px 15px; /* 안쪽 여백 위아래 12px, 좌우 15px */
    font-size: 1em; /* 부모 요소 글자 크기 기준 (1em = 부모 font-size) */
    transition: border-color 0.3s ease; /* 테두리 색깔이 0.3초간 부드럽게 변경되도록 */
}

/* 포커스 되었을 때 테두리 강조 */
#todoInput:focus {
    border-color: #4a90e2; /* 파란색 테두리로 변경해 입력 중임을 알림 */
}

/* ---------------- */
/* 추가 버튼 스타일 */
/* ---------------- */
#addTodoBtn {
    padding: 12px 25px; /* 버튼 내부 위아래 12px, 좌우 25px 여백 */
    font-size: 1em; /* 입력창과 같은 기준 크기 */
    border: none; /* 기본 테두리 제거 */
    border-radius: 5px; /* 모서리 둥글게 처리 */
    background-color: #4a90e2; /* 파란색 배경 */
    color: white; /* 글자색은 흰색 */
    cursor: pointer; /* 마우스 올리면 손가락 포인터로 변경 */
    transition: background-color 0.3s ease, transform 0.1s ease; /* 배경색과 크기 변화가 부드럽게 실행 */
}

/* 버튼 위에 마우스 올렸을 때 */
#addTodoBtn:hover {
    background-color: #357bd8; /* 더 진한 파란색으로 변경 */
    transform: translateY(-2px); /* 위로 2px 살짝 떠서 눌림 효과 연출 */
}

/* 버튼 클릭(눌렀을 때)의 애니메이션 */
#addTodoBtn:active {
    transform: translateY(0); /* 다시 원래 위치로 돌아옴 */
}

/* ------------------------------- */
/* 입력창 플레이스홀더(placeholder) */
/* 텍스트 색상 조절 */
/* ------------------------------- */
::placeholder {
    color: #bbb; /* 연한 회색 텍스트로 흐릿하게 표시 */
}
